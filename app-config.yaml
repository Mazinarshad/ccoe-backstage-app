app:
  title: GBT Backstage Application
  baseUrl: https://backstage.apps.dveps.gbt.gbtad.com

organization:
  name: GBT Backstage Application

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: https://backstage.apps.dveps.gbt.gbtad.com
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: https://backstage.apps.dveps.gbt.gbtad.com
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: pg
    connection:
      host: 172.30.145.62
      port: 5432
      user: testuser
      password: Backstage!31
      database: testdb
    pool:
      min: 0
      max: 20
      acquireTimeoutMillis: 60000
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      apiBaseUrl: https://api.github.com
      apps:
        - $include: examples/ghec-gbt-backstage.yaml

githubPullRequests:
  baseUrl: https://api.github.com
  token: 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


proxy:
  '/jenkins/api':
    target: 'https://jenkins2.gbt.gbtad.com'
    changeOrigin: true
    headers:
      Authorization: Basic MTExMTZkMmVmZTY2MWY1MTVhNTM0OGYyNzExMjkxNzU0Ng==

##proxy:
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  environment: development
  providers:
    github:
      development:
        clientId: Ov23liCqqvWGii3b0I0I
        clientSecret: 936b6dd10d88d8f7819d8e0cf1210f87c70b6ff2
    okta:
      development:
        clientId: 0oa276uuvyhVjSOR30h8
        clientSecret: dtD6X1QqBBHQVtlw-FUMDWsC5y5lCrLrKAYTK8DBADuEoR6JI_4sRJD1EYx_e___
        audience: https://amexgbt.oktapreview.com

# scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml
    - type: file
      target: ../../catalog-info.yaml

    # Local example template
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]

    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [User, Group]
  # Experimental: Always use the search method in UrlReaderProcessor.
  # New adopters are encouraged to enable it as this behavior will be the default in a future release.
  # useUrlReadersSearch: true
  providers:
    github:
      sandbox:
        organization: 'AMEX-GBTG-Sandbox'
        validateLocationsExist: true
        catalogPath: 'examples/template/content/catalog-info.yaml'
        schedule:
          frequency: PT1400M
          timeout: PT15M
        filters:
          branch: 'feature-14'
          repository: '^ccoe-backstage-app$' 

  # see https://backstage.io/docs/features/kubernetes/configuration for kubernetes configuration options

# see https://backstage.io/docs/permissions/getting-started for more on the permission framework
permission:
  # setting this to `false` will disable permissions
  enabled: true
